AWSTemplateFormatVersion: 2010-09-09
Description: Master/Parent template which calls all other (nested) templates needed to fully deploy SaU2 application stack
Parameters:
    GitHubOwner:
        Type: String
        Default: swmcode
    GitHubClientRepo:
        Type: String
        Default: SaUClient
    GitHubClientBranch:
        Type: String
        Default: develop
    GitHubServerRepo:
        Type: String
        Default: SaUServer
    GitHubServerBranch:
        Type: String
        Default: develop
    GitHubOAuthToken:
        Type: String
        Description: 'GitHub personal access token, needed to create Webhook'
        NoEcho: true
    GitHubSecret:
        Type: String
        Description: GitHub Webhook Secert - https://developer.github.com/webhooks/creating/#secret
        NoEcho: true
    EnvironmentName:
        Type: String
        Description: "Target environment to deploy source. For production use 'prod'"
        Default: dev
    ApiCertificateArn:
        Type: String
        Description: ARN of the Amazon Certificate Manager SSL certificate to use for API (e.g., www-api.submitanupdate.com)
    SiteCertificateArn:
        Type: String
        Description: ARN of the Amazon Certificate Manager SSL certificate to use for site (e.g., www.submitanupdate.com)
    EnvSecretArn:
        Type: String
        Description: ARN of the AWS Secrets Manager key for environment vars JSON object string
    HostZoneName:
        Type: String
        Description: 'Route53 Hosted Zone Name'
        Default: submitanupdate2.com
    TemplateS3Bucket:
        Type: String
        Description: Root URL for S3 Bucket where nested CF templates can be found
        Default: https://sau-cf-code.s3.amazonaws.com

Conditions:
    # determines if passed target environment is 'prod'
    IsProd: !Equals [!Ref EnvironmentName, 'prod']

# Some of the Nested Stacks/Templates have dependecies on each other, consequently their order below
# is important.
#
# Before you edit this or other templates, please make sure you understand how CloudFormation works
# as well as what the individual stacks/templates are doing
Resources:
    SaUServerResources:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [
                        !Ref TemplateS3Bucket,
                        'sau2-rest-service-cluster-aws-cf.yml',
                    ],
                ]
            Parameters:
                EnvironmentName: !Ref EnvironmentName
                CertificateArn: !Ref ApiCertificateArn
                EnvSecretArn: !Ref EnvSecretArn

    SaUServerCD:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-rest-service-cd-aws-cf.yml'],
                ]
            Parameters:
                GitHubOwner: !Ref GitHubOwner
                GitHubRepo: !Ref GitHubServerRepo
                GitHubBranch: !Ref GitHubServerBranch
                GitHubOAuthToken: !Ref GitHubOAuthToken
                GitHubSecret: !Ref GitHubSecret
                EnvironmentName: !Ref EnvironmentName
                EnvSecretArn: !Ref EnvSecretArn
                CloudFormationDeployRoleArn: !GetAtt SaUServerResources.Outputs.CloudFormationDeployRoleArn
                RedisCacheUrl: !GetAtt SaUServerResources.Outputs.RedisCacheUrl

    SaUAliasServer:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-subdomain-alias-aws-cf.yml'],
                ]
            Parameters:
                Subdomain: !Sub
                    - '${ApiSubDomain}${ApiSubDomainSuffix}'
                    - ApiSubDomain: !If [IsProd, '', !Ref EnvironmentName]
                      ApiSubDomainSuffix: !If [IsProd, 'api', '-api']
                TargetDNSName: !GetAtt SaUServerResources.Outputs.PublicLoadBalancerDnsName
                HostZoneName: !Ref HostZoneName
                HostedZoneId: Z35SXDOTRQ7X7K

    SaUClientHost:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-rest-client-host-aws-cf.yml'],
                ]

    SaUDistribution:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-distribution-aws-cf.yml'],
                ]
            Parameters:
                Subdomain: !Sub
                    - '${SubDomain}'
                    - { SubDomain: !If [IsProd, 'www', !Ref EnvironmentName] }
                EnvironmentName: !Ref EnvironmentName
                ClientOriginID: 'SaUClient'
                ClientDomainName: !GetAtt SaUClientHost.Outputs.Sau2ReactClientBucketDomainName
                ServerOriginID: 'SaUServer'
                ServerDomainName: !Sub
                    - '${ApiSubDomain}${ApiSubDomainSuffix}.${HostZoneName}'
                    - ApiSubDomain: !If [IsProd, '', !Ref EnvironmentName]
                      ApiSubDomainSuffix: !If [IsProd, 'api', '-api']
                HostZoneName: !Ref HostZoneName
                CertificateArn: !Ref SiteCertificateArn

    SaUClientCD:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-rest-client-cd-aws-cf.yml'],
                ]
            Parameters:
                GitHubOwner: !Ref GitHubOwner
                GitHubRepo: !Ref GitHubClientRepo
                GitHubBranch: !Ref GitHubClientBranch
                GitHubOAuthToken: !Ref GitHubOAuthToken
                GitHubSecret: !Ref GitHubSecret
                EnvironmentName: !Ref EnvironmentName
                Sau2ReactClientHostBucket: !GetAtt SaUClientHost.Outputs.Sau2ReactClientBucket
                Sau2ReactClientHostBucketArn: !GetAtt SaUClientHost.Outputs.Sau2ReactClientBucketArn
                Distribution: !GetAtt SaUDistribution.Outputs.Distribution

    SaUAliasClient:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL:
                !Join [
                    '/',
                    [!Ref TemplateS3Bucket, 'sau2-subdomain-alias-aws-cf.yml'],
                ]
            Parameters:
                Subdomain: !Sub
                    - '${SubDomain}'
                    - { SubDomain: !If [IsProd, 'www', !Ref EnvironmentName] }
                TargetDNSName: !GetAtt SaUDistribution.Outputs.SauDistributionDomainName
                HostZoneName: !Ref HostZoneName
                HostedZoneId: Z2FDTNDATAQYW2
